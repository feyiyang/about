---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';

const draftBlogEntries = (await getCollection('blog', (data) => {
  return data.data.draft !== true;
})).sort(
	(a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main id="main">
			<section class="wrap">
				<ul class="arts">
					{draftBlogEntries.map((post) => {
						const withDesc = !!post.data.description
						return (
							<li class={withDesc ? "desc_box" : ""}>
								<p class="title">
									<a class="link" href={'/posts/' + post.slug}>{post.data.title}</a>
									<span class="extra">
										{
											post.data.blogs?.map(blog => (
												<a href={blog.link} target="_blank">{blog.from}</a>
											))
										}
									</span>
									<time datetime={post.data.pubDate}>
										{new Date(post.data.pubDate).toLocaleDateString('zh-cn', {
											year: 'numeric',
											month: 'short',
											day: 'numeric',
										})}
									</time>
								</p>
								{
									withDesc && 
									<div class="desc">{
											post.data.description
										} {
											post.data.tag && post.data.tag.map(t => <span class="ptag">{t}</span>)
										}
									</div>
								}
							</li>
						)
					} )}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
<style lang="less">
@import '../styles/global.less';
.wrap {
	padding: 0 20px;
}
.arts li {
	padding: 2px 0 20px 0;
	list-style: none;
	.title {
		height: 26px;
		padding: 0 4px;
		margin-bottom: 2px;
		border-bottom: 1px #c9c9d0 solid;
		time {
			float: right;
			font-size: 12px;
			color: @text_grey;
		}
		a.link {
			font-size: 16px;
			display: inline-block;
			border-bottom: 1px @bg_dark solid;
			&:hover {
				border-color: @text_blue;
			}
		}
	}
	.desc {
		position: relative;
		padding: 4px 8px;
		border-radius: 0 0 4px 4px;
		background-color: @bg_card;
		white-space: pre-line;
		.gen-columns(1);
		.gen-columns(@n) when (@n =< 7) {
			.ptag:nth-of-type(@{n}) {
				z-index: 10 - @n;
				bottom: 10px * (@n - 1);
			}
			.gen-columns(@n + 1);
		};
		.ptag {
			position: absolute;
			left: -5px;
			bottom: 0;
			padding: 0 5px;
			transform: translateX(-100%);
			font-size: 12px;
			background-color: #fff;
			border-left: 2px @bg_grey solid;
			border-bottom: 2px @bg_grey solid;
			cursor: default;
			&:hover {
				z-index: 9;
			}
		}
	}
	.extra {
		padding-left: 8px;
		font-size: 10px;
		color: #999;
	}
}
</style>
